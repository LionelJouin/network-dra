// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: pkg/oci/api/v1alpha1/api.proto

package v1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OCIHookClient is the client API for OCIHook service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OCIHookClient interface {
	CreateRuntime(ctx context.Context, in *CreateRuntimeRequest, opts ...grpc.CallOption) (*CreateRuntimeResponse, error)
}

type oCIHookClient struct {
	cc grpc.ClientConnInterface
}

func NewOCIHookClient(cc grpc.ClientConnInterface) OCIHookClient {
	return &oCIHookClient{cc}
}

func (c *oCIHookClient) CreateRuntime(ctx context.Context, in *CreateRuntimeRequest, opts ...grpc.CallOption) (*CreateRuntimeResponse, error) {
	out := new(CreateRuntimeResponse)
	err := c.cc.Invoke(ctx, "/v1alpha1.OCIHook/CreateRuntime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OCIHookServer is the server API for OCIHook service.
// All implementations must embed UnimplementedOCIHookServer
// for forward compatibility
type OCIHookServer interface {
	CreateRuntime(context.Context, *CreateRuntimeRequest) (*CreateRuntimeResponse, error)
	mustEmbedUnimplementedOCIHookServer()
}

// UnimplementedOCIHookServer must be embedded to have forward compatible implementations.
type UnimplementedOCIHookServer struct {
}

func (UnimplementedOCIHookServer) CreateRuntime(context.Context, *CreateRuntimeRequest) (*CreateRuntimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRuntime not implemented")
}
func (UnimplementedOCIHookServer) mustEmbedUnimplementedOCIHookServer() {}

// UnsafeOCIHookServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OCIHookServer will
// result in compilation errors.
type UnsafeOCIHookServer interface {
	mustEmbedUnimplementedOCIHookServer()
}

func RegisterOCIHookServer(s grpc.ServiceRegistrar, srv OCIHookServer) {
	s.RegisterService(&OCIHook_ServiceDesc, srv)
}

func _OCIHook_CreateRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCIHookServer).CreateRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1alpha1.OCIHook/CreateRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCIHookServer).CreateRuntime(ctx, req.(*CreateRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OCIHook_ServiceDesc is the grpc.ServiceDesc for OCIHook service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OCIHook_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1alpha1.OCIHook",
	HandlerType: (*OCIHookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRuntime",
			Handler:    _OCIHook_CreateRuntime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/oci/api/v1alpha1/api.proto",
}
